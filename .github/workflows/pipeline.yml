name: CI/CD - bump, build, push

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/simple-java-maven-app

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # --- 2a: Normalize to 1.0.0 if needed, else bump PATCH ---
      - name: Normalize/bump version in pom.xml
        run: |
          set -e
          CURR=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version || true)
          echo "Current version: ${CURR}"
          case "$CURR" in
            ""|*-SNAPSHOT)
              NEW="1.0.0"
              ;;
            *)
              mvn -q build-helper:parse-version
              MAJ=$(mvn -q -DforceStdout help:evaluate -Dexpression=parsedVersion.majorVersion)
              MIN=$(mvn -q -DforceStdout help:evaluate -Dexpression=parsedVersion.minorVersion)
              PAT=$(mvn -q -DforceStdout help:evaluate -Dexpression=parsedVersion.incrementalVersion)
              [ -z "$PAT" ] && PAT=0
              NEW="${MAJ}.${MIN}.$((PAT+1))"
              ;;
          esac
          echo "NEW_VERSION=${NEW}" >> $GITHUB_ENV
          mvn -q versions:set -DnewVersion="${NEW}" -DgenerateBackupPoms=false

      - name: Commit version bump
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add pom.xml
          git commit -m "chore: bump version to ${NEW_VERSION}" || echo "No changes"
          git push

      # Build JAR
      - name: Build with Maven
        run: mvn -q -DskipTests package

      # --- 2b: Multistage Docker build (requires Dockerfile below) ---
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & tag image
        run: |
          docker build -t "${IMAGE_NAME}:latest" -t "${IMAGE_NAME}:${NEW_VERSION}" .

      # --- 2c: Push to registry (required) ---
      - name: Push images
        run: |
          docker push "${IMAGE_NAME}:${NEW_VERSION}"
          docker push "${IMAGE_NAME}:latest"